// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Footer from "./footer.bs.js";
import * as Js_array from "rescript/lib/es6/js_array.js";
import * as Belt_List from "rescript/lib/es6/belt_List.js";
import * as Js_string from "rescript/lib/es6/js_string.js";
import * as Caml_array from "rescript/lib/es6/caml_array.js";
import * as RescriptReactRouter from "@rescript/react/src/RescriptReactRouter.bs.js";

function encodeImageUrl(key, value) {
  switch (key) {
    case "image" :
    case "logo" :
        break;
    default:
      return value;
  }
  return value.replace(/=/g, "$image$").replace(/\&/g, "$image2$").replace(/\?/g, "$image3$");
}

function decodeImageUrl(key, value) {
  switch (key) {
    case "image" :
    case "logo" :
        break;
    default:
      return value;
  }
  return value.replace(/\$image\$/g, "=").replace(/\$image2\$/g, "&").replace(/\$image3\$/g, "?");
}

function App(props) {
  var match = React.useState(function () {
        return "";
      });
  var setImage = match[1];
  var image = match[0];
  var match$1 = React.useState(function () {
        return "";
      });
  var setName = match$1[1];
  var name = match$1[0];
  var match$2 = React.useState(function () {
        return "";
      });
  var setDescription = match$2[1];
  var description = match$2[0];
  var match$3 = React.useState(function () {
        return "";
      });
  var setPhone = match$3[1];
  var phone = match$3[0];
  var match$4 = React.useState(function () {
        return "";
      });
  var setLogo = match$4[1];
  var logo = match$4[0];
  var match$5 = React.useState(function () {
        return "";
      });
  var setHighlightText = match$5[1];
  var highlightText = match$5[0];
  var match$6 = React.useState(function () {
        return "";
      });
  var setExtraText = match$6[1];
  var extraText = match$6[0];
  var params = RescriptReactRouter.useUrl(undefined, undefined);
  var setWithSearch = function (setter, key, e) {
    var search = Js_string.split("&", params.search);
    var path = Js_array.joinWith("/", Belt_List.toArray(params.path));
    console.log("old_search", search);
    var new_search;
    if (0 === search.length || Caml_array.get(search, 0) === "") {
      var value = encodeImageUrl(key, e.target.value);
      new_search = key + "=" + encodeURI(value);
    } else {
      var exist = search.find(function (param) {
            var match = Js_string.split("=", param);
            if (match.length !== 2) {
              throw {
                    RE_EXN_ID: "Match_failure",
                    _1: [
                      "app.res",
                      49,
                      12
                    ],
                    Error: new Error()
                  };
            }
            var search_key = match[0];
            return search_key === key;
          });
      var new_search$1 = Js_array.joinWith("&", search.map(function (param) {
                var match = Js_string.split("=", param);
                if (match.length !== 2) {
                  throw {
                        RE_EXN_ID: "Match_failure",
                        _1: [
                          "app.res",
                          55,
                          14
                        ],
                        Error: new Error()
                      };
                }
                var search_key = match[0];
                var value = match[1];
                var new_value = encodeImageUrl(search_key, e.target.value);
                if (search_key === key) {
                  return search_key + "=" + encodeURI(new_value);
                } else {
                  console.log("search_key", search_key);
                  return search_key + "=" + value;
                }
              }));
      new_search = exist !== undefined ? new_search$1 : new_search$1 + "&" + key + "=" + encodeURI(e.target.value);
    }
    console.log("new_search", new_search);
    RescriptReactRouter.push(path + "?" + new_search);
    return Curry._1(setter, e.target.value);
  };
  React.useEffect((function () {
          var params$1 = Js_string.split("&", params.search);
          if (0 === params$1.length || Caml_array.get(params$1, 0) === "") {
            return ;
          } else {
            params$1.forEach(function (param) {
                  var match = Js_string.split("=", param);
                  if (match.length !== 2) {
                    throw {
                          RE_EXN_ID: "Match_failure",
                          _1: [
                            "app.res",
                            85,
                            12
                          ],
                          Error: new Error()
                        };
                  }
                  var key = match[0];
                  var value = match[1];
                  var decodeValue = function (param) {
                    return decodeURI(value);
                  };
                  var decode_value_url = function (param) {
                    var new_value = decodeImageUrl(key, decodeURI(value));
                    console.log("new_value", new_value);
                    return new_value;
                  };
                  switch (key) {
                    case "description" :
                        return Curry._1(setDescription, decodeValue);
                    case "extraText" :
                        return Curry._1(setExtraText, decodeValue);
                    case "highlightText" :
                        return Curry._1(setHighlightText, decodeValue);
                    case "image" :
                        return Curry._1(setImage, decode_value_url);
                    case "logo" :
                        return Curry._1(setLogo, decode_value_url);
                    case "name" :
                        return Curry._1(setName, decodeValue);
                    case "phone" :
                        return Curry._1(setPhone, decodeValue);
                    default:
                      return ;
                  }
                });
            return ;
          }
        }), [params.search]);
  var create_footer = {
    image: image,
    name: name,
    description: description,
    phone: phone,
    logo: logo,
    highlightText: highlightText,
    extraText: extraText
  };
  return React.createElement("div", {
              className: "flex flex-col items-center"
            }, React.createElement("div", undefined, React.createElement("h1", {
                      className: "text-gray-500 text-3xl m-6"
                    }, "Html footer generator"), React.createElement("div", {
                      className: "flex"
                    }, React.createElement("input", {
                          className: "border-2 border-gray-300 p-2 m-2",
                          placeholder: "image url",
                          value: image,
                          onChange: (function (param) {
                              return setWithSearch(setImage, "image", param);
                            })
                        }), React.createElement("div", {
                          className: "flex flex-col"
                        }, React.createElement("input", {
                              className: "border-2 border-gray-300 p-2 m-2",
                              placeholder: "name",
                              value: name,
                              onChange: (function (param) {
                                  return setWithSearch(setName, "name", param);
                                })
                            }), React.createElement("input", {
                              className: "border-2 border-gray-300 p-2 m-2",
                              placeholder: "description",
                              value: description,
                              onChange: (function (param) {
                                  return setWithSearch(setDescription, "description", param);
                                })
                            }), React.createElement("input", {
                              className: "border-2 border-gray-300 p-2 m-2",
                              placeholder: "phone",
                              value: phone,
                              onChange: (function (param) {
                                  return setWithSearch(setPhone, "phone", param);
                                })
                            }))), React.createElement("div", undefined, React.createElement("input", {
                          className: "border-2 border-gray-300 p-2 m-2",
                          placeholder: "logo url",
                          value: logo,
                          onChange: (function (param) {
                              return setWithSearch(setLogo, "logo", param);
                            })
                        }), React.createElement("input", {
                          className: "border-2 border-gray-300 p-2 m-2",
                          placeholder: "highlightText",
                          value: highlightText,
                          onChange: (function (param) {
                              return setWithSearch(setHighlightText, "highlightText", param);
                            })
                        }), React.createElement("input", {
                          className: "border-2 border-gray-300 p-2 m-2",
                          placeholder: "extraText",
                          value: extraText,
                          onChange: (function (param) {
                              return setWithSearch(setExtraText, "extraText", param);
                            })
                        }))), React.createElement("div", {
                  className: "mt-24"
                }, React.createElement("h2", {
                      className: "text-gray-500 text-xl m-6"
                    }, "Manually copy footer below and paste into your email settings:"), React.createElement("iframe", {
                      className: "border-2 p-16 w-[800px] h-[500px]",
                      srcDoc: Footer.make_footer(create_footer)
                    })));
}

var make = App;

export {
  encodeImageUrl ,
  decodeImageUrl ,
  make ,
}
/* react Not a pure module */
